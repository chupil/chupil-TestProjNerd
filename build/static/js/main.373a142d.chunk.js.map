{"version":3,"sources":["components/login.component.js","components/signup.component.js","components/task.component.js","components/TaskTable.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","onChangeEmail","bind","onChangePassword","onSubmit","state","email","password","welcome","check","wrong","e","this","setState","target","value","userData","JSON","parse","localStorage","getItem","userLogin","push","to","pathname","className","type","placeholder","onChange","defaultvalue","Component","SignUp","onChangeName","name","save","preventDefault","user","text","id","mes","accounts","account","setItem","stringify","accountsData","map","index","splice","Array","prototype","apply","required","onChangeText","saveText","delitedText","editText","dropdownsendUser","sendTask","newTaskId","userOldData","usersMails","userNewData","edit","$","dropdown","Date","toString","creator","prevOwner","newOwner","accountData","length","window","alert","i","newArray","oldData","newDelData","prevProps","prevState","class","key","aria-label","rows","wrap","disabled","onClick","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","TaskTable","accountsAndTasksAndID","forceUpdate","idAndMas","Tasks","task","history","createBrowserHistory","App","returnTo","taskTable","taskLogin","userlogined","exact","path","render","React","withRouter","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.373a142d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from 'react-router'; \n\n\n\nexport default class Login extends Component {\n    userData;\n\n    constructor(props) {\n        super(props);\n\n       \n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state =\n         {  email: '',\n            password: '',           \n            welcome: false,\n            check: false,\n            wrong: false\n        }\n    }\n\n\n    \n\n    onChangeEmail(e) {\n        this.setState({ email: e.target.value })\n    }\n\n    onChangePassword(e) {\n        this.setState({ password: e.target.value })\n    }\n\n\n   \n\n    onSubmit(e) {\n       \n        this.setState({check : !this.state.check});\n\n        this.userData = JSON.parse(localStorage.getItem(this.state.email,this.state.email));\n                 \n        if(!(this.userData == null)  && this.state.email ==  this.userData.email && this.userData.password === this.state.password){\n            this.setState({welcome : true});          \n            this.props.userLogin(this.userData); \n        }\n        \n        }\n\n\n \n        // componentDidUpdate(prevProps, prevState) {\n  \n        //     if(this.state.check !== prevState.welcome && this.state.email.length != 0 &&  this.state.email.length != 0 ){\n                \n        //         this.userData = JSON.parse(localStorage.getItem(this.state.email,this.state.email));\n                 \n        //         if(!(this.userData == null)  && this.state.email ==  this.userData.email && this.userData.password === this.state.password){\n        //             this.setState({welcome : true});          \n        //             this.props.userLogin(this.userData); \n        //         }\n                   \n                \n\n        //     }\n\n           \n        // }        \n\n\n\n\n    render() {\n        if (this.state.welcome) {\n            return <Redirect  push  to= {{ pathname: \"/task\"}}/>\n          }\n\n         \n        return (\n            <form onSubmit={this.onSubmit}>\n                <h3> Sign In</h3>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\"\n                     value={this.state.email} onChange={this.onChangeEmail} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\n                    defaultvalue={this.state.password} onChange={this.onChangePassword} />\n                </div>\n               \n\n                <button   type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button> \n\n                \n            </form>\n        );\n    }\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\"\n\n\nexport default class SignUp extends Component {\n\n    userData;\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            save: null\n        }\n    }\n\n    // Form Values\n    onChangeName(e) {\n        this.setState({ name: e.target.value });\n       \n    }\n\n    onChangeEmail(e) {\n        this.setState({ email: e.target.value });\n        \n    }\n\n    onChangePassword(e) {\n        this.setState({ password: e.target.value });\n       \n    }\n\n\n    \n    componentDidMount() {\n       \n        this.userData = JSON.parse(localStorage.getItem(this.state.email));\n\n        if (localStorage.getItem(this.state.email)) {\n            this.setState({\n                name: this.userData.name,\n                email: this.userData.email,\n                password: this.userData.password\n            })\n        } else {           \n            this.setState({\n                name: '',\n                email: '',\n                password: ''\n            })\n          \n\n        }\n    }\n\n  \n\n    onSubmit(e) {       \n        e.preventDefault()\n        this.setState({save:true});\n\n       \n\n        let user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            text : [{\n                id: '',\n                mes: ''\n            }] \n        };\n        var accounts = [{  \n                account: this.state.name,\n                email: this.state.email\n            }]; \n            \n                \n        localStorage.setItem(user.email, JSON.stringify(user));\n\n        // it accounts array builder\n\n        var accountsData = JSON.parse(localStorage.getItem(\"accounts\"));\n        if(accountsData != null){\n            if(accountsData){                  \n                accountsData.map((account,index)=>{\n                if(account.email == this.state.email){ \n                    accountsData.splice(index,1);\n                }\n            });\n            Array.prototype.push.apply(accountsData, accounts)\n            localStorage.setItem(\"accounts\", JSON.stringify(accountsData));\n        }\n        }\n            else{           \n            localStorage.setItem(\"accounts\", JSON.stringify(accounts));\n        }\n        \n    }\n \n    render() {\n        \n        return (\n\n            <form onSubmit={this.onSubmit}>\n                <h3>Sign Up</h3>\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" \n                    value={this.state.name}  required onChange={this.onChangeName} />\n                </div>           \n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter email\" \n                        value={this.state.email} onChange={this.onChangeEmail}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\"\n                    defaultvalue={this.state.password} onChange={this.onChangePassword} />\n                </div>\n\n               \n                \n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\n        Sign Up </button>  \n        {this.state.save &&  <Link  to={\"/sign-in\"}>\n                   <button type=\"submit\" className=\"btn btn-success btn-block mt-2\">\n        return to Sign in </button>  </Link>}              \n            </form>\n\n\n        );\n    }\n}\n\n","import React, { Component, Fragment } from \"react\";\r\nimport $ from 'jquery'; \r\n\r\nexport default class SignUp extends Component {\r\n \r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeText = this.onChangeText.bind(this);\r\n    this.saveText = this.saveText.bind(this);\r\n    this.delitedText = this.delitedText.bind(this);  \r\n    this.editText = this.editText.bind(this);\r\n    this.dropdownsendUser = this.dropdownsendUser.bind(this);\r\n    this.sendTask = this.sendTask.bind(this);\r\n    this.state = {        \r\n        save: false,       \r\n        newTaskId : [] ,\r\n        userOldData : [],\r\n        usersMails :[],\r\n        userNewData : [],\r\n        delitedText :false,\r\n        editText : false,\r\n        edit : '',\r\n        sendTask : []\r\n       \r\n    }\r\n}\r\n\r\n\r\ndropdownsendUser(e){\r\n $().dropdown('show') \r\n}\r\n\r\nonChangeText(e) {   \r\n  this.setState({ newTaskId :  [{\r\n    id: `f${(+new Date).toString(16)}`,\r\n    mes: e.target.value,\r\n    creator:this.state.userOldData.email,\r\n    prevOwner: [],\r\n    newOwner :[],    \r\n}],\r\n edit: e.target.value\r\n });  \r\n\r\n}\r\n\r\n\r\nsendTask(text,account,e){ \r\n  text.newOwner = account.email;\r\n  text.prevOwner = this.state.userOldData.email; \r\n  var accountData = JSON.parse(localStorage.getItem(account.email)); \r\n  if(text.mes.length != 0){  \r\n  Array.prototype.push.apply(accountData.text, [text]); \r\n  localStorage.setItem(account.email, JSON.stringify(accountData));\r\n  this.delitedText(text,e);\r\n  \r\n  }\r\n  window.alert(\"success\"+ \" \"+ account.account +\" \"+ account.email);\r\n}\r\n\r\n\r\nsaveText(text,e) {    \r\n  if(this.state.editText == true){    \r\n    for( var i = 0; i <  this.state.userOldData.text.length; i++){    \r\n      if( this.state.userOldData.text[i].id == text.id){\r\n        this.state.userOldData.text[i].mes = this.state.edit;           \r\n       }     \r\n    }      \r\n   } else if(this.state.userOldData.text.length != 0){  \r\n  Array.prototype.push.apply(this.state.userOldData.text, this.state.newTaskId); \r\n  }\r\n\r\n  localStorage.setItem(this.props.user.email, JSON.stringify(this.state.userOldData));\r\n  this.setState({save:!this.state.save, editText : false }); \r\n  e.preventDefault();\r\n}\r\n   \r\ndelitedText(text,e) {\r\n  var newArray =[]; \r\n   for( var i = 0; i <  this.state.userOldData.text.length; i++){    \r\n       if( this.state.userOldData.text[i].id != text.id){\r\n        newArray.push(this.state.userOldData.text[i]);\r\n        }           \r\n    } \r\n    var oldData =   this.state.userOldData;\r\n    oldData.text = newArray;\r\n    var  newDelData = oldData;\r\n   localStorage.setItem(this.props.user.email, JSON.stringify(newDelData));\r\n   this.state.userOldData = JSON.parse(localStorage.getItem(this.props.user.email));     \r\n   this.setState({ userNewData :  this.state.userOldData, delitedText:!this.state.delitedText });  \r\n   e.preventDefault();\r\n}\r\n\r\neditText(){\r\n  this.setState({editText : !this.state.editText});\r\n\r\n}\r\n\r\n\r\n\r\ncomponentDidMount(){\r\n    this.state.userOldData = JSON.parse(localStorage.getItem(this.props.user.email)); \r\n    this.state.usersMails = JSON.parse(localStorage.getItem(\"accounts\"));     \r\n    this.setState({ userNewData :  this.state.userOldData });\r\n    \r\n  }\r\n\r\n\r\n componentDidUpdate(prevProps, prevState) {\r\n }\r\n\r\n\r\n\r\n    render() {\r\n \r\n   \r\n \r\n \r\n        return (\r\n\r\n          <Fragment> \r\n \r\n\r\n{ this.state.userOldData.text && this.state.userOldData.text.map((text,index) => { \r\n  \r\n\r\n    return (        \r\n<div class=\"col-sm multi\" key={index}>\r\n<div  class=\"container mb-1\"  >\r\n<h1 class=\"btn btn-sm btn-outline-secondary\">{this.state.userOldData.name}</h1></div>\r\n<div  class=\"container mb-1\"  >\r\n\r\n</div>\r\n\r\n<div class=\"row\"  >\r\n\r\n  <div class=\"col-md-4\" >\r\n    <div class=\"card mb-4 box-shadow\">      \r\n      <div class=\"card-body\"  > \r\n        \r\n        <form >\r\n          <div class=\"row\">\r\n          {this.state.editText || text.mes.length ==0 ? \r\n            <div class=\"col\">            \r\n            <textarea class=\"form-control\" id=\"textMes\" aria-label=\"With textarea\" rows=\"6\" \r\n            wrap   \r\n              onChange={(e) => {this.onChangeText(e, \"textMes\") }}></textarea>\r\n            </div> \r\n:\r\n            <div class=\"col\">\r\n            <textarea class=\"form-control height\"  rows=\"6\"  wrap  value={text.mes} disabled   > </textarea>\r\n            </div>}\r\n            \r\n           \r\n          </div>\r\n        </form>\r\n        \r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n          <div class=\"btn-group mt-1\">\r\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\"  onClick={(e)=> {this.saveText(text,e)}}>Save</button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\"  disabled = {text.mes.length == 0} onClick={(e)=> {this.delitedText(text,e)}} >Delete </button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\"  disabled = {text.mes.length == 0} onClick={(e)=> {this.editText(text,e)}} >Edit</button>\r\n           \r\n            <div class=\"dropdown\">\r\n          <button class=  \"btn btn-secondary dropdown-toggle\" disabled = {text.mes.length == 0}\r\n          type=\"button\" id={index} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n          onClick={(e)=> {this.dropdownsendUser(e)}} >\r\n            Send tasks\r\n          </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" >\r\n\r\n         \r\n            {this.state.usersMails && this.state.usersMails.map((account,index)=>{\r\n              return (   \r\n              <a class=\"dropdown-item \" href=\"#\" key={index} onClick={(e)=> {this.sendTask(text,account,e)}} >{account.account}    {account.email}</a>\r\n              )})};           \r\n              \r\n\r\n              \r\n             </div>\r\n</div>\r\n          </div>          \r\n    \r\n        </div>\r\n        {text.prevOwner && (text.prevOwner.length>0) && <h1 class=\"btn btn-sm btn-warning\">Get from:{text.prevOwner}</h1>}\r\n               \r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n</div>)})}\r\n</Fragment>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class TaskTable extends Component {\r\n\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);   \r\n\r\n        this.state = {\r\n            accounts : [],\r\n            accountsAndTasksAndID :[]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){         \r\n        this.state.accounts = JSON.parse(localStorage.getItem(\"accounts\"));  \r\n           \r\n                \r\n        this.state.accounts && this.state.accounts.map((account,index) => {\r\n                    let user = JSON.parse(localStorage.getItem(account.email));\r\n                    if(user && account.email == user.email ){\r\n                        Array.prototype.push.apply(this.state.accountsAndTasksAndID, [{user}]);\r\n                    }\r\n                                      \r\n                    \r\n                })\r\n               \r\n                localStorage.setItem(\"usersData\", JSON.stringify(this.state.accountsAndTasksAndID));\r\n                this.forceUpdate();\r\n    }\r\n\r\n \r\n    render() {\r\n        \r\n\r\n       \r\n        \r\n\r\n       \r\n        return (\r\n\r\n\r\n            this.state.accountsAndTasksAndID && this.state.accountsAndTasksAndID.map((account,index) => {                 \r\n                  var idAndMas = account.user.text.map((account,index)=>{   \r\n                   \r\n                    return   <Fragment >\r\n                    <div class=\" TaskBorderBot\" key={index}>\r\n                        <div class=\"row \">\r\n                            <div class=\"row justify-content-center m-1\">\r\n                            {account.creator && (account.creator.length>0) && <p><b>Creat: </b>{account.creator} </p> }\r\n                            {account.prevOwner && (account.prevOwner.length>0) && <p><b>Get from: </b> {account.prevOwner}</p>}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"row \">\r\n                        {account.mes && (account.mes.length>0) && <div class=\"row justify-content-center mt-1\"><p class=\"fix-it\"><b>TASK: </b>{account.mes}</p></div>}\r\n                        </div>\r\n\r\n                        </div>\r\n                     </Fragment>\r\n           \r\n                   \r\n\r\n                })\r\n\r\n                var Tasks = account.user.text.map((task)=>{ \r\n\r\n                    return <Fragment> <div class=\"row\">                        \r\n                   {task.mes && (task.mes.length>0) && <li ><p><b>TASK: </b>{task.mes}</p> </li>}\r\n                    </div>\r\n                    </Fragment>\r\n\r\n                })\r\n\r\n                return (  \r\n           \r\n\r\n                    <div class=\"container text-center TaskBord\" key={index}>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4 TaskBorderBotRight\">\r\n                                <div class=\"col \">\r\n                                    <ol >\r\n                                    \r\n                                        {Tasks}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-8\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <div class=\"row justify-content-center\">\r\n                                            <div class=\"row \">  <p><b>ToDo: </b>{account.user.name} &#8195;</p>\r\n                                                <p><b>Mail: </b>{account.user.email}</p></div>\r\n                                         </div>\r\n                                        <div class=\"col \">\r\n                                            {idAndMas}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n       \r\n        \r\n        )})\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport 'bootstrap' \nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history'\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport Task from \"./components/task.component\";\nimport TaskTable from \"./components/TaskTable\";\n\n\n\nconst history = createBrowserHistory();\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.userLogin = this.userLogin.bind(this);\n    this.returnTo = this.returnTo.bind(this);\n    this.taskTable = this.taskTable.bind(this);\n    this.state = { user : [], taskLogin : true };}\n\n\n  returnTo(){\n    this.setState({taskLogin : true }); \n    }\n\n  userLogin(userlogined){\n    this.setState({ user : userlogined, taskLogin : false});  \n  }\n\n  taskTable(){\n    this.forceUpdate();\n  }\n\n\n  render() {   \n    \n\n  return ( <Router >\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={\"/sign-in\"}></Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-in\"} onClick= {(e)=>{ this.returnTo(e); }}>Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/sign-up\"} onClick= {(e)=>{ this.returnTo(e); }}>Sign up</Link>\n              </li>  \n              {!this.state.taskLogin && <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/task\"}  onClick= {(e)=>{ this.taskTable(e); }}>MyTask</Link>\n              </li>}\n            {!this.state.taskLogin && <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={\"/task-table\"}  onClick= {(e)=>{ this.taskTable(e); }}>TaskTable</Link>\n              </li>}\n              \n             \n              \n                      \n            </ul>\n          </div>\n        </div>\n      </nav>\n      \n      <div className= {this.state.taskLogin ? \"auth-wrapper\":\"auth-wrapper-task pt-5 \"}>\n        <div className={this.state.taskLogin ? \"auth-inner\" : \"auth-inner-task-multi row row-cols-4\"} >\n        <Switch>\n            <Route exact path='/'   render={props => <Login userLogin = {this.userLogin}/>} />\n            <Route history={history}  path=\"/sign-in\" render={props => <Login userLogin = {this.userLogin}/> }/>\n            <Route history={history}  path=\"/sign-up\" render ={()=><SignUp />} />            \n            <Route history={history}  path=\"/task\" render ={()=><Task user = {this.state.user}/>} />\n            <Route history={history}  path=\"/task-table\" render ={()=><TaskTable user = {this.state.user}/>} />\n            </Switch>\n        </div>\n      </div>     \n\n      \n   \n    </div>\n\n    \n    \n    </Router>\n  );\n}\n}\n\nexport default withRouter(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}